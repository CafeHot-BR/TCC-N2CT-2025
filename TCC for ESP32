       fw
from time import sleep_ms
from machine import Pin, time_pulse_us, ADC
from machine import PWM
from machine import Timer
from machine import ADC
import time
"""
import machine
import onewire
import ds18x20
"""

"""
    // Entradas e saídas //

---------------------------------
Botão On/Off  ---------> I-25
Echo Sensor Água ------> I-34
Trigger Sensor ÁGUA ---> O-02
Echo Sensor Óleo ------> I-14
Trigger Sensor Óleo ---> O-23
Echo Sensor Soda ------> I-26
Trigger Sensor Soda ---> O-27
Analog_agua -----------> I-33
Bomba_Agua ------------> O-13
Servo_motor -----------> O-32
Bomba_Mistura ---------> O-22
Resistência_Mist01 ----> O-04
Bomba_Mistura02 -------> O-21
Motor_Mistura02 -------> O-19
Resistência_Mist02 ----> O-18
---------------------------------

"""

# // Declaração de váriaveis iniciais //

Temporizador = [0]
Etapa = "Step 00"
Valor_ideal_agua = 2000
Valor_ideal_oleo = 10000
Valor_ideal_soda = 10000
tempo_agua = 10000
sequencia_despejar = 5
Sistema_despause = ""

#  // Declarar entradas //

Botao_on_off        = Pin(25, Pin.IN, Pin.PULL_DOWN)
Echo_Sensor_Oleo    = Pin(14, Pin.IN)
Echo_Sensor_Soda    = Pin(27, Pin.IN)
Echo_Sensor_Agua    = Pin(34, Pin.IN)
Sensor_Temperatura1 = Pin(32, Pin.IN)
Sensor_Temperatura2 = Pin(35, Pin.IN)

# // Declarar entrada analógica //

Analog_agua         = ADC(Pin(33))

"""
pin = machine.Pin(34)
"""

#   // Declarar saídas //

Trigger_Sensor_Agua = Pin(2, Pin.OUT)
Trigger_Sensor_Oleo = Pin(23, Pin.OUT)
Trigger_Sensor_Soda = Pin(27, Pin.OUT)
Bomba_Agua          = Pin(13, Pin.OUT)
Bomba_mistura01     = Pin(22, Pin.OUT)
Resistencia_mis01   = Pin(4, Pin.OUT)
Bomba_Mistura02     = Pin(21, Pin.OUT)
Motor_Mistura02     = Pin(19, Pin.OUT)
Resistência_Mist02  = Pin(18, Pin.OUT)
# Servo_motor_soda    = PWM(Pin(32), freq=50) Foi desativado temporáriamente

# // Forçar todas as váriaveis em zero //

Trigger_oleo = Trigger_Sensor_Oleo.value(0)
Trigger_soda = Trigger_Sensor_Soda.value(0)
Bomba_Agua.value(0)
Resistência_Mist02.value(0)
Bomba_mistura01.value(0)
Motor_Mistura02.value(0)

# // Definir barramento do Sensor de temperatura

"""
ow = onewire.OneWire(pin) #Define o barramento do OneWire
ds = ds18x20.DS18X20(ow) #Inicializa o sensor 


#Procura o sensor, pois podem haver mais de um no sistema

roms = ds.scan()
print('Sensores encontrados:', roms)

"""

print(f"Programa TCC - TCN2 - Iniciado")

while True:

    Botao_on__off = Botao_on_off.value()

    if Botao_on__off == 1 and Etapa == "Step 00" :
        print(f"O sistema está iniciando")
        sleep_ms(200)
        Status_Sistema = "On"
        medições_ok = False

        while Status_Sistema == "On":

            print(f"Iniciando Medição de ingredientes")

            # Iniciando Medição Água

            Botao_on__off = Botao_on_off.value()

            if Botao_on__off == 1:

                sleep_ms(400)
                print(f"Sistema pausado...")
                
                while Sistema_despause != 1:

                    print(f"Para despausar o código, aperte novamente o botão")

                    Sistema_despause = Botao_on_off.value()
         
            while medições_ok == False:
                
                Botao_on__off = Botao_on_off.value()
                Sistema_despause = 0

                if Botao_on__off == 1:

                    sleep_ms(400)
                    print(f"Sistema pausado...")
                
                    while Sistema_despause != 1:

                        print(f"Para despausar o código, aperte novamente o botão")

                        Sistema_despause = Botao_on_off.value()



                Trigger_oleo = Trigger_Sensor_Oleo(1)
                time.sleep_ms(10)
                Trigger_oleo = Trigger_Sensor_Oleo(0)

                duracao_oleo = time_pulse_us(Echo_Sensor_Oleo, 1)
                distancia_oleo = ((duracao_oleo * 0.0343) / 2)
                quantidade_oleo = ((distancia_oleo) * (27 * 22.6))

                print('Quantidade de óleo: {:.2f}ml'.format(quantidade_oleo))

                Botao_on__off = Botao_on_off.value()
                Sistema_despause = 0

                if Botao_on__off == 1:

                    sleep_ms(400)
                    print(f"Sistema pausado...")
                
                    while Sistema_despause != 1:

                        print(f"Para despausar o código, aperte novamente o botão")

                        Sistema_despause = Botao_on_off.value()

                sleep_ms(350)

                Trigger_soda = Trigger_Sensor_Soda(1)
                time.sleep_ms(10)
                Trigger_soda = Trigger_Sensor_Soda(0)

                duracao_soda = time_pulse_us(Echo_Sensor_Soda, 1)
                distancia_soda = ((duracao_soda * 0.0343) / 2)
                quantidade_soda = (distancia_soda) * ((27 * 22.6) * 3.1415) #Medir reservatório de Soda

                print('Quantidade de soda: {:.2f}ml'.format(quantidade_soda))

                Botao_on__off = Botao_on_off.value()
                Sistema_despause = 0

                if Botao_on__off == 1:

                    sleep_ms(400)
                    print(f"Sistema pausado...")
                
                    while Sistema_despause != 1:

                        print(f"Para despausar o código, aperte novamente o botão")

                        Sistema_despause = Botao_on_off.value()

                sleep_ms(350)

                leitura_agua = Analog_agua.read()

                # Lembrar de colocar sensor de mistura
                
                print(f"Quantidade de água: {leitura_agua}ml")

                Botao_on__off = Botao_on_off.value()
                Sistema_despause = 0

                if Botao_on__off == 1:

                    sleep_ms(400)
                    print(f"Sistema pausado...")
                    sleep_ms(400)
                
                    while Sistema_despause != 1:

                        print(f"Para despausar o código, aperte novamente o botão")

                        Sistema_despause = Botao_on_off.value()


                
                sleep_ms(350)

                if quantidade_oleo >= Valor_ideal_oleo and quantidade_soda >= Valor_ideal_soda and leitura_agua >= Valor_ideal_agua:

                    print(f"As medidas estão ok, indo para próxima etapa:")
                    medições_ok = True
                    Status_Sistema = "Next Step"
                    Etapa = "Step 01"

    elif Etapa == "Step 01":

        print(f"Iniciando Ligamento das bombas")
        
        Bomba_Agua.value(1)
        sleep_ms(tempo_agua)
        Bomba_Agua.value(0)

        print(f"Processo bombeamento de água: Concluído")

        Status_Sistema = "Despejando Soda"

        while Status_Sistema == "Despejando Soda":
            
            Bomba_mistura01.value(1)

            Trigger_soda = Trigger_Sensor_Soda(1)
            time.sleep_ms(10)
            Trigger_soda = Trigger_Sensor_Soda(0)

            duracao_soda = time_pulse_us(Echo_Sensor_Soda, 1)
            distancia_soda = ((duracao_soda * 0.0343) / 2)
            quantidade_soda = (distancia_soda) * (22 * 3.1415) # Conta medição de Soda

            print(f"Medição foi de: {quantidade_soda}")

            """
            ds.convert_temp()         # Inicia a conversão de temperatura
            time.sleep_ms(750)        # Aguarda a conversão (750ms é o tempo típico)

            for rom in roms:
                temp = ds.read_temp(rom)  # Lê a temperatura do sensor
                print('Temperatura:', temp, '°C')
    
                time.sleep(2)
            

            if temp <= 40:

                Resistencia_mis01.value(1)

            elif temp >= 40:
            
                Resistencia_mis01.value(0)
            """

            Botao_on__off = Botao_on_off.value()
            Sistema_despause = 0

            if Botao_on__off == 1:

                sleep_ms(400)
                print(f"Sistema pausado...")
                
                while Sistema_despause != 1:

                    print(f"Para despausar o código, aperte novamente o botão")

                    Sistema_despause = Botao_on_off.value()


            if quantidade_soda >= 14000:
                
                """
                # Mover servo para posição 0
                Servo_motor_soda.duty(40)
                sleep_ms(800)
                # Mover servo para posição máxima
                Servo_motor_soda.duty(77)
                sleep_ms(800)
                """

            elif quantidade_soda <= 14000: #Limite de Soda para término do despejamento

                Bomba_mistura01.value(0)
                Status_Sistema = "Processo Soda concluído"
                Etapa = "Step 02"
                print(f"Processo de despejamento de Soda: Concluído")
        
    elif Etapa == "Step 02":
        
        print(f"Etapa 02 iniciada")
        
        Bomba_Mistura02.value(1)
        sleep_ms(10000)
        Bomba_Mistura02.value(0)
        
        if Status_Sistema == "Processo Soda concluído":
            
            print(f"Iniciando Processo de Mistura!")

            Motor_Mistura02.value(1)
            tempo = 0
            
            
            while tempo <= 10000: #Define o tempo do cronômetro sem pausar o código por muito tempo

                # Falta realizar a lógica dos termômetros
                sleep_ms(1)
                tempo += 1
            
            Motor_Mistura02.value(0)
            Status_Sistema = "Processo OUT"
            Etapa = "Step 03"

    elif Etapa == "Step 03":

        print(f"WIP")
        sleep_ms(2000)
        Etapa = "Step 00"
